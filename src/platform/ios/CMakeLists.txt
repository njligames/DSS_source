set(XCODE_DEVELOPMENT_TEAM $ENV{XCODE_DEVELOPMENT_TEAM})

add_library(SDL2 UNKNOWN IMPORTED)
set_property(TARGET SDL2 APPEND PROPERTY IMPORTED_LOCATION "${THIRDPARTY_DIR}/platform/${TARGET_PLATFORM}/Release\$(EFFECTIVE_PLATFORM_NAME)/libSDL2.a")
list(APPEND TARGET_LIBRARIES SDL2)

# add_library(SDL_test UNKNOWN IMPORTED)
# set_property(TARGET SDL_test APPEND PROPERTY IMPORTED_LOCATION  "${THIRDPARTY_DIR}/platform/${TARGET_PLATFORM}/Release\$(EFFECTIVE_PLATFORM_NAME)/libSDL2test.a")
# list(APPEND TARGET_LIBRARIES SDL_test)

set_target_properties(SDL2 PROPERTIES INTERFACE_INCLUDE_DIRECTORIES ${THIRDPARTY_DIR}/includes/SDL2)

list(APPEND TARGET_INCLUDE_DIRS ${THIRDPARTY_DIR}/includes/SDL2)

set(ASSET_CATALOGUE ${CMAKE_CURRENT_SOURCE_DIR}/resources/Assets.xcassets)
list(APPEND TARGET_RESOURCES ${ASSET_CATALOGUE})

set_source_files_properties( "${TARGET_RESOURCES}" PROPERTIES MACOSX_PACKAGE_LOCATION Resources)

SET(CMAKE_OSX_SYSROOT "iphoneos")
SET(CMAKE_XCODE_EFFECTIVE_PLATFORMS "-iphoneos;-iphonesimulator")

set(CMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET "10.0" CACHE STRING "Minimum supported iOS version")

# https://svn.scolring.org/trunk/dependencies/CMake/toolchain/IOS.toolchain.cmake
set(IOS_IPHONEOS_ARCHS "arm64 armv7" CACHE STRING "Target iPhone architectures")
set(IOS_IPHONESIMULATOR_ARCHS "i386 x86_64" CACHE STRING "Target iPhone simulator architectures")
# Set iPhoneOS architectures
set(CMAKE_XCODE_ATTRIBUTE_ARCHS[sdk=iphoneos*] "${IOS_IPHONEOS_ARCHS}")
set(CMAKE_XCODE_ATTRIBUTE_VALID_ARCHS[sdk=iphoneos*] "${IOS_IPHONEOS_ARCHS}")

# Set iPhoneSimulator architectures
set(CMAKE_XCODE_ATTRIBUTE_ARCHS[sdk=iphonesimulator*] "${IOS_IPHONESIMULATOR_ARCHS}")
set(CMAKE_XCODE_ATTRIBUTE_VALID_ARCHS[sdk=iphonesimulator*] "${IOS_IPHONESIMULATOR_ARCHS}")


list(APPEND TARGET_LIBRARIES "-framework OpenGLES")
list(APPEND TARGET_LIBRARIES "-framework UIKit")
list(APPEND TARGET_LIBRARIES "-framework Foundation")
list(APPEND TARGET_LIBRARIES "-framework AVFoundation")
list(APPEND TARGET_LIBRARIES "-framework GameController")
list(APPEND TARGET_LIBRARIES "-framework CoreMotion")
list(APPEND TARGET_LIBRARIES "-framework CoreGraphics")
list(APPEND TARGET_LIBRARIES "-framework QuartzCore")
list(APPEND TARGET_LIBRARIES "-framework Metal")
list(APPEND TARGET_LIBRARIES "-framework AudioToolbox")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/resources/Info.plist.in ${CMAKE_BINARY_DIR}/Info.plist)

add_executable( ${CMAKE_PROJECT_NAME} ${TARGET_PROJECT_SOURCES} ${TARGET_MAIN_SOURCES} ${TARGET_INCLUDE_DIRS} ${TARGET_RESOURCES} )
# set_property(DIRECTORY ${CMAKE_SOURCE_DIR} PROPERTY XCODE_STARTUP_PROJECT ${CMAKE_PROJECT_NAME})

set_target_properties(
    ${CMAKE_PROJECT_NAME} PROPERTIES

    MACOSX_BUNDLE TRUE
    RESOURCE "${TARGET_RESOURCES}"

    XCODE_ATTRIBUTE_DEVELOPMENT_TEAM "${XCODE_DEVELOPMENT_TEAM}"
    OUTPUT_NAME "${TARGET_EXECUTABLE_NAME}"
    POSITION_INDEPENDENT_CODE ON
    XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
    XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"
    XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME "AppIcon"
    XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER ${TARGET_BUNDLE_ID}.${TARGET_PLATFORM}
    XCODE_ATTRIBUTE_SDKROOT "iphonesimulator"
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "LaunchImage"
    XCODE_ATTRIBUTE_PRODUCT_NAME ${TARGET_EXECUTABLE_NAME}
    XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
    INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS}"
    )

target_compile_definitions( ${CMAKE_PROJECT_NAME} PUBLIC ${TARGET_DEFINITIONS})
target_link_libraries( ${CMAKE_PROJECT_NAME} ${TARGET_LIBRARIES})

if(TARGET_PROJECT_SOURCES)
    add_library( ${CMAKE_PROJECT_NAME}-static ${TARGET_PROJECT_SOURCES} ${TARGET_INCLUDE_DIRS} )
    # set_property(DIRECTORY ${CMAKE_SOURCE_DIR}-static PROPERTY XCODE_STARTUP_PROJECT ${CMAKE_PROJECT_NAME})

    set_target_properties(
        ${CMAKE_PROJECT_NAME}-static PROPERTIES

        OUTPUT_NAME "${TARGET_EXECUTABLE_NAME}"
        XCODE_ATTRIBUTE_PRODUCT_NAME ${TARGET_EXECUTABLE_NAME}
        POSITION_INDEPENDENT_CODE ON
        XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
        XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
        XCODE_ATTRIBUTE_SDKROOT "iphonesimulator"
        XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
        XCODE_ATTRIBUTE_ENABLE_BITCODE NO
        INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS}"
        )

    target_compile_definitions( ${CMAKE_PROJECT_NAME}-static PUBLIC ${TARGET_DEFINITIONS})
    target_link_libraries( ${CMAKE_PROJECT_NAME}-static ${TARGET_LIBRARIES})


    add_library( ${CMAKE_PROJECT_NAME}Framework ${TARGET_PROJECT_SOURCES} ${TARGET_INCLUDE_DIRS} )
    # set_property(DIRECTORY ${CMAKE_SOURCE_DIR}Framework PROPERTY XCODE_STARTUP_PROJECT ${CMAKE_PROJECT_NAME})

    set_target_properties(
        ${CMAKE_PROJECT_NAME}Framework PROPERTIES

        FRAMEWORK TRUE
        FRAMEWORK_VERSION C

        RESOURCE "${TARGET_RESOURCES}"

        XCODE_ATTRIBUTE_DEVELOPMENT_TEAM "${XCODE_DEVELOPMENT_TEAM}"
        OUTPUT_NAME "${TARGET_EXECUTABLE_NAME}"
        POSITION_INDEPENDENT_CODE ON
        XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
        XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
        MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"
        XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME "AppIcon"
        XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER ${TARGET_BUNDLE_ID}.${TARGET_PLATFORM}.framework
        XCODE_ATTRIBUTE_SDKROOT "iphonesimulator"
        XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
        XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "LaunchImage"
        XCODE_ATTRIBUTE_PRODUCT_NAME ${TARGET_EXECUTABLE_NAME}
        XCODE_ATTRIBUTE_ENABLE_BITCODE NO
        XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
        INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS}"
        VERSION 1.0.0
        SOVERSION 1.0.0
        PUBLIC_HEADER "${TARGET_INCLUDE_DIRS}"
        )

    target_compile_definitions( ${CMAKE_PROJECT_NAME}Framework PUBLIC ${TARGET_DEFINITIONS})
    target_link_libraries( ${CMAKE_PROJECT_NAME}Framework ${TARGET_LIBRARIES})
endif()

enable_testing()
add_subdirectory(test)
