add_library(SDL_test UNKNOWN IMPORTED)
set_property(TARGET SDL_test APPEND PROPERTY IMPORTED_LOCATION  "${THIRDPARTY_DIR}/platform/${TARGET_PLATFORM}/Release\$(EFFECTIVE_PLATFORM_NAME)/libSDL2test.a")
list(APPEND TARGET_LIBRARIES SDL_test)

list(APPEND TARGET_INCLUDE_DIRS ${GTEST_INCLUDE_DIRS})
list(APPEND TARGET_INCLUDE_DIRS ${GMOCK_INCLUDE_DIRS})
list(APPEND TARGET_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR})

file(GLOB SRCS ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
file(GLOB HDRS ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

list(APPEND TARGET_PROJECT_SOURCES_TEST ${SRCS} ${HDRS})

SET(CMAKE_OSX_SYSROOT "appletvos")
SET(CMAKE_XCODE_EFFECTIVE_PLATFORMS "-appletvos;-appletvsimulator")

set(CMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET "10.0" CACHE STRING "Minimum supported iOS version")

# https://svn.scolring.org/trunk/dependencies/CMake/toolchain/IOS.toolchain.cmake
set(IOS_IPHONEOS_ARCHS "arm64 armv7" CACHE STRING "Target iPhone architectures")
set(IOS_IPHONESIMULATOR_ARCHS "i386 x86_64" CACHE STRING "Target iPhone simulator architectures")
# Set iPhoneOS architectures
set(CMAKE_XCODE_ATTRIBUTE_ARCHS[sdk=appletvos*] "${IOS_IPHONEOS_ARCHS}")
set(CMAKE_XCODE_ATTRIBUTE_VALID_ARCHS[sdk=appletvos*] "${IOS_IPHONEOS_ARCHS}")

# Set iPhoneSimulator architectures
set(CMAKE_XCODE_ATTRIBUTE_ARCHS[sdk=appletvsimulator*] "${IOS_IPHONESIMULATOR_ARCHS}")
set(CMAKE_XCODE_ATTRIBUTE_VALID_ARCHS[sdk=appletvsimulator*] "${IOS_IPHONESIMULATOR_ARCHS}")

add_executable( ${CMAKE_PROJECT_NAME}-test-static ${TARGET_PROJECT_SOURCES_TEST} ${TARGET_RESOURCES})
# set_property(DIRECTORY ${CMAKE_SOURCE_DIR} PROPERTY XCODE_STARTUP_PROJECT ${CMAKE_PROJECT_NAME})

set_target_properties(
    ${CMAKE_PROJECT_NAME}-test-static PROPERTIES

    MACOSX_BUNDLE TRUE
    RESOURCE "${TARGET_RESOURCES}"

    XCODE_ATTRIBUTE_DEVELOPMENT_TEAM "${XCODE_DEVELOPMENT_TEAM}"
    POSITION_INDEPENDENT_CODE ON
    XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "3"
    XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"
    XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME "App Icon & Top Shelf Image"
    XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER ${TARGET_BUNDLE_ID}.${TARGET_PLATFORM}.test-static
    XCODE_ATTRIBUTE_SDKROOT "appletvsimulator"
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "LaunchImage"
    XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
    INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS}"
    )

target_compile_definitions( ${CMAKE_PROJECT_NAME}-test-static PUBLIC ${TARGET_DEFINITIONS})
target_link_libraries( ${CMAKE_PROJECT_NAME}-test-static ${CMAKE_PROJECT_NAME}-static ${GTEST_LIBRARY} ${GMOCK_LIBRARY} SDL_test)
add_dependencies( ${CMAKE_PROJECT_NAME}-test-static ${CMAKE_PROJECT_NAME}-static ${GTEST_LIBRARY} ${GMOCK_LIBRARY})
add_test(NAME ${CMAKE_PROJECT_NAME}-test-static COMMAND ${CMAKE_PROJECT_NAME}-test-static)

add_executable( ${CMAKE_PROJECT_NAME}-test-framework ${TARGET_PROJECT_SOURCES_TEST} ${TARGET_RESOURCES})
# set_property(DIRECTORY ${CMAKE_SOURCE_DIR} PROPERTY XCODE_STARTUP_PROJECT ${CMAKE_PROJECT_NAME})

set_target_properties(
    ${CMAKE_PROJECT_NAME}-test-framework PROPERTIES

    MACOSX_BUNDLE TRUE
    RESOURCE "${TARGET_RESOURCES}"

    XCODE_ATTRIBUTE_DEVELOPMENT_TEAM "${XCODE_DEVELOPMENT_TEAM}"
    POSITION_INDEPENDENT_CODE ON
    XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "3"
    XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"
    XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME "App Icon & Top Shelf Image"
    XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER ${TARGET_BUNDLE_ID}.${TARGET_PLATFORM}.test-framework
    XCODE_ATTRIBUTE_SDKROOT "appletvsimulator"
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "LaunchImage"
    XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
    INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS}"
    )

target_compile_definitions( ${CMAKE_PROJECT_NAME}-test-framework PUBLIC ${TARGET_DEFINITIONS})
target_link_libraries( ${CMAKE_PROJECT_NAME}-test-framework ${CMAKE_PROJECT_NAME}Framework ${GTEST_LIBRARY} ${GMOCK_LIBRARY} SDL_test)
add_dependencies( ${CMAKE_PROJECT_NAME}-test-framework ${CMAKE_PROJECT_NAME}-static ${GTEST_LIBRARY} ${GMOCK_LIBRARY})
add_test(NAME ${CMAKE_PROJECT_NAME}-test-framework COMMAND ${CMAKE_PROJECT_NAME}-test-framework)

