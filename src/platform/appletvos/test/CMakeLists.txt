SET(CMAKE_OSX_SYSROOT "appletvos")
SET(CMAKE_XCODE_EFFECTIVE_PLATFORMS "-appletvos;-appletvsimulator")

set(CMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET "10.0" CACHE STRING "Minimum supported iOS version")

# https://svn.scolring.org/trunk/dependencies/CMake/toolchain/IOS.toolchain.cmake
set(IOS_IPHONEOS_ARCHS "arm64 armv7" CACHE STRING "Target iPhone architectures")
set(IOS_IPHONESIMULATOR_ARCHS "i386 x86_64" CACHE STRING "Target iPhone simulator architectures")
# Set iPhoneOS architectures
set(CMAKE_XCODE_ATTRIBUTE_ARCHS[sdk=appletvos*] "${IOS_IPHONEOS_ARCHS}")
set(CMAKE_XCODE_ATTRIBUTE_VALID_ARCHS[sdk=appletvos*] "${IOS_IPHONEOS_ARCHS}")

# Set iPhoneSimulator architectures
set(CMAKE_XCODE_ATTRIBUTE_ARCHS[sdk=appletvsimulator*] "${IOS_IPHONESIMULATOR_ARCHS}")
set(CMAKE_XCODE_ATTRIBUTE_VALID_ARCHS[sdk=appletvsimulator*] "${IOS_IPHONESIMULATOR_ARCHS}")

# find_package(Threads REQUIRED)

include(ExternalProject)

ExternalProject_Add(
  googletest
  GIT_REPOSITORY https://github.com/google/googletest.git
  UPDATE_COMMAND ""
  INSTALL_COMMAND ""
  LOG_DOWNLOAD ON
  LOG_CONFIGURE ON
  LOG_BUILD ON)

ExternalProject_Get_Property(googletest source_dir)
set(GTEST_INCLUDE_DIRS ${source_dir}/googletest/include)
set(GMOCK_INCLUDE_DIRS ${source_dir}/googlemock/include)

ExternalProject_Get_Property(googletest binary_dir)
set(lib_dir ${binary_dir}/lib)
# if(APPLE)
#set(lib_dir "${binary_dir}/lib/\$(CONFIGURATION)\$(EFFECTIVE_PLATFORM_NAME)")
# endif()

set(GTEST_LIBRARY_PATH ${lib_dir}/${CMAKE_FIND_LIBRARY_PREFIXES}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})
set(GTEST_LIBRARY_PATH_DEBUG ${lib_dir}/Debug/${CMAKE_FIND_LIBRARY_PREFIXES}gtestd${CMAKE_STATIC_LIBRARY_SUFFIX})

set(GTEST_LIBRARY gtest)
add_library(${GTEST_LIBRARY} STATIC IMPORTED)
set_target_properties(${GTEST_LIBRARY} PROPERTIES
    POSITION_INDEPENDENT_CODE ON
    XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "3"
    XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    XCODE_ATTRIBUTE_SDKROOT "appletvsimulator"
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    IMPORTED_LOCATION_RELWITHDEBINFO "${GTEST_LIBRARY_PATH}"
    IMPORTED_LOCATION_MINSIZEREL "${GTEST_LIBRARY_PATH}"
    IMPORTED_LOCATION_RELEASE "${GTEST_LIBRARY_PATH}"
    IMPORTED_LOCATION_DEBUG "${GTEST_LIBRARY_PATH_DEBUG}"
    # IMPORTED_LINK_INTERFACE_LIBRARIES "${CMAKE_THREAD_LIBS_INIT}"
    )

add_dependencies(${GTEST_LIBRARY} googletest)

set(GTEST_MAIN_LIBRARY_PATH ${lib_dir}/${CMAKE_FIND_LIBRARY_PREFIXES}gtest_main${CMAKE_STATIC_LIBRARY_SUFFIX})
set(GTEST_MAIN_LIBRARY_PATH_DEBUG ${lib_dir}/Debug/${CMAKE_FIND_LIBRARY_PREFIXES}gtest_maind${CMAKE_STATIC_LIBRARY_SUFFIX})
set(GTEST_MAIN_LIBRARY gtest_main)
add_library(${GTEST_MAIN_LIBRARY} STATIC IMPORTED)
set_target_properties(${GTEST_MAIN_LIBRARY} PROPERTIES
    POSITION_INDEPENDENT_CODE ON
    XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "3"
    XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES NO
    XCODE_ATTRIBUTE_SDKROOT "appletvsimulator"
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    IMPORTED_LOCATION_RELWITHDEBINFO "${GTEST_MAIN_LIBRARY_PATH}"
    IMPORTED_LOCATION_MINSIZEREL "${GTEST_MAIN_LIBRARY_PATH}"
    IMPORTED_LOCATION_RELEASE "${GTEST_MAIN_LIBRARY_PATH}"
    IMPORTED_LOCATION_DEBUG "${GTEST_MAIN_LIBRARY_PATH_DEBUG}"
    # IMPORTED_LINK_INTERFACE_LIBRARIES "${CMAKE_THREAD_LIBS_INIT}"
    )
add_dependencies(${GTEST_MAIN_LIBRARY} googletest)

set(GMOCK_LIBRARY_PATH ${lib_dir}/${CMAKE_FIND_LIBRARY_PREFIXES}gmock${CMAKE_STATIC_LIBRARY_SUFFIX})
set(GMOCK_LIBRARY_PATH_DEBUG ${lib_dir}/Debug/${CMAKE_FIND_LIBRARY_PREFIXES}gmockd${CMAKE_STATIC_LIBRARY_SUFFIX})
set(GMOCK_LIBRARY gmock)
add_library(${GMOCK_LIBRARY} STATIC IMPORTED)
set_target_properties(${GMOCK_LIBRARY} PROPERTIES
    POSITION_INDEPENDENT_CODE ON
    XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "3"
    XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    XCODE_ATTRIBUTE_SDKROOT "appletvsimulator"
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    IMPORTED_LOCATION_RELWITHDEBINFO "${GMOCK_LIBRARY_PATH}"
    IMPORTED_LOCATION_MINSIZEREL "${GMOCK_LIBRARY_PATH}"
    IMPORTED_LOCATION_RELEASE "${GMOCK_LIBRARY_PATH}"
    IMPORTED_LOCATION_DEBUG "${GMOCK_LIBRARY_PATH_DEBUG}"
    # IMPORTED_LINK_INTERFACE_LIBRARIES "${CMAKE_THREAD_LIBS_INIT}"
    )
add_dependencies(${GMOCK_LIBRARY} googletest)

set(GMOCK_MAIN_LIBRARY_PATH ${lib_dir}/${CMAKE_FIND_LIBRARY_PREFIXES}gmock_main${CMAKE_STATIC_LIBRARY_SUFFIX})
set(GMOCK_MAIN_LIBRARY_PATH_DEBUG ${lib_dir}/Debug/${CMAKE_FIND_LIBRARY_PREFIXES}gmock_maind${CMAKE_STATIC_LIBRARY_SUFFIX})
set(GMOCK_MAIN_LIBRARY gmock_main)
add_library(${GMOCK_MAIN_LIBRARY} STATIC IMPORTED)
set_target_properties(${GMOCK_MAIN_LIBRARY} PROPERTIES
    POSITION_INDEPENDENT_CODE ON
    XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "3"
    XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    XCODE_ATTRIBUTE_SDKROOT "appletvsimulator"
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    IMPORTED_LOCATION_RELWITHDEBINFO "${GMOCK_MAIN_LIBRARY_PATH}"
    IMPORTED_LOCATION_MINSIZEREL "${GMOCK_MAIN_LIBRARY_PATH}"
    IMPORTED_LOCATION_RELEASE "${GMOCK_MAIN_LIBRARY_PATH}"
    IMPORTED_LOCATION_DEBUG "${GMOCK_MAIN_LIBRARY_PATH_DEBUG}"
    # IMPORTED_LINK_INTERFACE_LIBRARIES "${CMAKE_THREAD_LIBS_INIT}"
  )
add_dependencies(${GMOCK_MAIN_LIBRARY} ${GTEST_LIBRARY})

include_directories("${GTEST_INCLUDE_DIRS}"
                    "${GMOCK_INCLUDE_DIRS}")

add_subdirectory(cpp)

